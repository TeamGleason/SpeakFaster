// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SpeakFasterObserver {

  /// <summary>Holder for reflection information generated from metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXRhZGF0YS5wcm90bxITU3BlYWtGYXN0ZXJPYnNlcnZlchofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byK/AQoPU2Vzc2lvbk1ldGFkYXRh",
            "EjkKFXNlc3Npb25fZW5kX3RpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASEAoIdGltZXpvbmUYAiABKAkSJAocY29tcHV0ZXJf",
            "bWFudWZhY3R1cmVyX2ZhbWlseRgDIAEoCRITCgtnYXplX2RldmljZRgEIAEo",
            "CRIQCghwbGF0Zm9ybRgFIAEoCRISCgpvc192ZXJzaW9uGAYgASgJYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeakFasterObserver.SessionMetadata), global::SpeakFasterObserver.SessionMetadata.Parser, new[]{ "SessionEndTimestamp", "Timezone", "ComputerManufacturerFamily", "GazeDevice", "Platform", "OsVersion" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SessionMetadata : pb::IMessage<SessionMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionMetadata> _parser = new pb::MessageParser<SessionMetadata>(() => new SessionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeakFasterObserver.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionMetadata(SessionMetadata other) : this() {
      sessionEndTimestamp_ = other.sessionEndTimestamp_ != null ? other.sessionEndTimestamp_.Clone() : null;
      timezone_ = other.timezone_;
      computerManufacturerFamily_ = other.computerManufacturerFamily_;
      gazeDevice_ = other.gazeDevice_;
      platform_ = other.platform_;
      osVersion_ = other.osVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionMetadata Clone() {
      return new SessionMetadata(this);
    }

    /// <summary>Field number for the "session_end_timestamp" field.</summary>
    public const int SessionEndTimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp sessionEndTimestamp_;
    /// <summary>
    /// Timestamp for the session's end.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SessionEndTimestamp {
      get { return sessionEndTimestamp_; }
      set {
        sessionEndTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 2;
    private string timezone_ = "";
    /// <summary>
    /// Timezone in which the session happened.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timezone {
      get { return timezone_; }
      set {
        timezone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "computer_manufacturer_family" field.</summary>
    public const int ComputerManufacturerFamilyFieldNumber = 3;
    private string computerManufacturerFamily_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComputerManufacturerFamily {
      get { return computerManufacturerFamily_; }
      set {
        computerManufacturerFamily_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gaze_device" field.</summary>
    public const int GazeDeviceFieldNumber = 4;
    private string gazeDevice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GazeDevice {
      get { return gazeDevice_; }
      set {
        gazeDevice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 5;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "os_version" field.</summary>
    public const int OsVersionFieldNumber = 6;
    private string osVersion_ = "";
    /// <summary>
    /// Operating system version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OsVersion {
      get { return osVersion_; }
      set {
        osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SessionEndTimestamp, other.SessionEndTimestamp)) return false;
      if (Timezone != other.Timezone) return false;
      if (ComputerManufacturerFamily != other.ComputerManufacturerFamily) return false;
      if (GazeDevice != other.GazeDevice) return false;
      if (Platform != other.Platform) return false;
      if (OsVersion != other.OsVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sessionEndTimestamp_ != null) hash ^= SessionEndTimestamp.GetHashCode();
      if (Timezone.Length != 0) hash ^= Timezone.GetHashCode();
      if (ComputerManufacturerFamily.Length != 0) hash ^= ComputerManufacturerFamily.GetHashCode();
      if (GazeDevice.Length != 0) hash ^= GazeDevice.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (OsVersion.Length != 0) hash ^= OsVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sessionEndTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SessionEndTimestamp);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Timezone);
      }
      if (ComputerManufacturerFamily.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ComputerManufacturerFamily);
      }
      if (GazeDevice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GazeDevice);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Platform);
      }
      if (OsVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OsVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sessionEndTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SessionEndTimestamp);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Timezone);
      }
      if (ComputerManufacturerFamily.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ComputerManufacturerFamily);
      }
      if (GazeDevice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GazeDevice);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Platform);
      }
      if (OsVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OsVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sessionEndTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionEndTimestamp);
      }
      if (Timezone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timezone);
      }
      if (ComputerManufacturerFamily.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComputerManufacturerFamily);
      }
      if (GazeDevice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GazeDevice);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (OsVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.sessionEndTimestamp_ != null) {
        if (sessionEndTimestamp_ == null) {
          SessionEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SessionEndTimestamp.MergeFrom(other.SessionEndTimestamp);
      }
      if (other.Timezone.Length != 0) {
        Timezone = other.Timezone;
      }
      if (other.ComputerManufacturerFamily.Length != 0) {
        ComputerManufacturerFamily = other.ComputerManufacturerFamily;
      }
      if (other.GazeDevice.Length != 0) {
        GazeDevice = other.GazeDevice;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.OsVersion.Length != 0) {
        OsVersion = other.OsVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sessionEndTimestamp_ == null) {
              SessionEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SessionEndTimestamp);
            break;
          }
          case 18: {
            Timezone = input.ReadString();
            break;
          }
          case 26: {
            ComputerManufacturerFamily = input.ReadString();
            break;
          }
          case 34: {
            GazeDevice = input.ReadString();
            break;
          }
          case 42: {
            Platform = input.ReadString();
            break;
          }
          case 50: {
            OsVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sessionEndTimestamp_ == null) {
              SessionEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SessionEndTimestamp);
            break;
          }
          case 18: {
            Timezone = input.ReadString();
            break;
          }
          case 26: {
            ComputerManufacturerFamily = input.ReadString();
            break;
          }
          case 34: {
            GazeDevice = input.ReadString();
            break;
          }
          case 42: {
            Platform = input.ReadString();
            break;
          }
          case 50: {
            OsVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
